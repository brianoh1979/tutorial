diff --git a/tutorial2.py b/tutorial2.py
index d243256..53c9151 100644
--- a/tutorial2.py
+++ b/tutorial2.py
@@ -1,6 +1,8 @@
 #!/usr/bin/env python
 import wandb
-wandb.init(project="firstproject")
+#import tensorflow as tf
+wandb.init(project="project2", entity="brianoh1979h")
+
 """
 This Weights & Biases sample script trains a basic CNN on the
 Fashion-MNIST dataset. It takes black and white images of clothing
@@ -21,18 +23,25 @@ import wandb
 from wandb.keras import WandbCallback
 
 # Initialize wandb and save hyperparameters
-wandb.init(
-  project="firstproject",
-  config={
-    "dropout": 0.2,
-    "hidden_layer_size": 128,
-    "layer_1_size": 16,
-    "layer_2_size": 32,
-    "decay": 1e-6,
-    "momentum": 0.9,
-    "epochs": 8 }
-)
-config = wandb.config
+#wandb.init(project="project1", entity="brianoh1979h")
+wandb.config = {
+  "learning_rate": 0.001,
+  "epochs": 100,
+  "batch_size": 128 
+}
+
+wandb.log({"acc": 0.9, "loss":0.1})
+
+#config = wandb.config
+
+with tf.Session() as sess:
+  # ...
+  wandb.tensorflow.log(tf.summary.merge_all())
+
+wandb.log({"loss": loss})
+
+# Optional
+wandb.watch(model)
 
 (X_train_orig, y_train_orig), (X_test, y_test) = fashion_mnist.load_data()
 
@@ -64,8 +73,8 @@ y_train = np_utils.to_categorical(y_train)
 y_test = np_utils.to_categorical(y_test)
 num_classes = y_test.shape[1]
 
-#sgd = SGD(decay=config.decay, momentum=config.momentum,
-#                            nesterov=True)
+sgd = SGD(decay=config.decay, momentum=config.momentum,
+                            nesterov=True)
 
 # build model
 model = Sequential()
diff --git a/wandb/settings b/wandb/settings
index bd1d4d2..598ff92 100644
--- a/wandb/settings
+++ b/wandb/settings
@@ -1,5 +1,4 @@
 [default]
 entity = brianoh1979b
 project = firstproject
-base_url = https://api.wandb.ai
 
